############################# README #############################

********** Task A **********
The named pipe, also called FIFO, can be used by processes with no common ancestor to communicate with each other.
As the term FIFO suggests, named pipes follow a "First in, first out" policy.

On linux machines, named pipes can be created using
	mkfifo <name of fifo file>

Normal file operations including open, read, write etc can be performed on this file.

Data can be written into the file from the terminal as demonstrated in the following example,
	ls -l > pipe1
This data can be read using,
	cat < pipe1

The process writing into the pipe blocks until there's a reader and vice versa.

********** Task B **********
The consumer and producer programs can be run simultaneously on two consoles. The producer generates some kind of data which the
consumer prints.

Experiment 1: Running one producer and one consumer at the same time
Upon killing the producer and letting the consumer run, the following message is displayed repeatedly.
	error reading ret=0 errno=0 perror: Success
The error number is 0 which suggests that there is no error.

This happens because the consumer has no bytes to read from the pipe so the value of ret is 0 (which signifies 0 bytes read).

Upon killing the consumer and letting the producer run, the following message is displayed repeatedly.
	error writing ret=-1 errno=32 perror: Broken pipe
A SIGPIPE signal is generated because the producer is trying to write to a pipe that has no consumers.

Experiment 2: Running one producer and multiple consumers at the same time
The lines generated by the producer are sometimes divided among all the consumers. However it was observed that a consumer that started later than the first consumer received very little or no data.

Experiment 3: Running multiple producers and one consumer concurrently
Lines generated by the producer are displayed by the consumer in a random order due to race conditions.

Experiment 4: Running multiple producers and consumers at the same time
Output of all producers get mixed among the consumers. No repeating lines were observed.
